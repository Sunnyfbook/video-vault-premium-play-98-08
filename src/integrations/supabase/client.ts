
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kumgcubkiraksmwlzjnv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt1bWdjdWJraXJha3Ntd2x6am52Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5MDgwODYsImV4cCI6MjA2MzQ4NDA4Nn0.DQDowwGFaVp_MkYeUEY7ILBjG1kcvW7Neb_-4yeAD_8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Function to execute admin operations with proper user context
export const executeAsAdmin = async <T>(operation: () => Promise<T>): Promise<T> => {
  const userId = localStorage.getItem('userId');
  const isAdmin = localStorage.getItem('isAdmin') === 'true';
  
  console.log('executeAsAdmin - userId:', userId, 'isAdmin:', isAdmin);
  
  if (!userId || !isAdmin) {
    throw new Error('Admin access required');
  }
  
  // Set the custom user context for RLS policies using raw SQL
  try {
    const { error } = await supabase.rpc('set_config', {
      setting_name: 'app.current_user_id',
      setting_value: userId,
      is_local: true
    });
    
    if (error) {
      console.log('Could not set config, proceeding anyway:', error);
    }
  } catch (error) {
    console.log('Config setting not available, proceeding anyway:', error);
  }
  
  return operation();
};
