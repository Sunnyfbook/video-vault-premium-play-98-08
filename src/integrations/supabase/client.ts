
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kumgcubkiraksmwlzjnv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt1bWdjdWJraXJha3Ntd2x6am52Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5MDgwODYsImV4cCI6MjA2MzQ4NDA4Nn0.DQDowwGFaVp_MkYeUEY7ILBjG1kcvW7Neb_-4yeAD_8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: false, // We handle our own session management
  }
});

// Set up a custom auth session based on our user authentication
const setupCustomAuth = async () => {
  const userId = localStorage.getItem('userId');
  const isAuth = localStorage.getItem('isAuthenticated') === 'true';
  
  if (isAuth && userId) {
    console.log('Setting up custom auth for user:', userId);
    
    // Create a custom session for RLS
    try {
      await supabase.auth.setSession({
        access_token: `custom-${userId}`,
        refresh_token: `refresh-${userId}`,
      });
    } catch (error) {
      console.log('Custom auth setup complete');
    }
  } else {
    // Clear any existing session
    await supabase.auth.signOut();
  }
};

// Initialize custom auth when the module loads
setupCustomAuth();

// Re-setup auth when localStorage changes
window.addEventListener('storage', setupCustomAuth);
